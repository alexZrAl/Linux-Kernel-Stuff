diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/include/linux/tcp.h linux-4.19.68-dev/include/linux/tcp.h
*** linux-4.19.68-original/include/linux/tcp.h	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/include/linux/tcp.h	2019-11-19 23:42:52.593568835 -0500
***************
*** 104,109 ****
--- 104,110 ----
  	u8	num_sacks;	/* Number of SACK blocks		*/
  	u16	user_mss;	/* mss requested by user in ioctl	*/
  	u16	mss_clamp;	/* Maximal mss, negotiated at connection setup */
+ 	u16 ssthresh_scale; /*our variable:  thresh factor  */
  };
  
  static inline void tcp_clear_options(struct tcp_options_received *rx_opt)
***************
*** 210,215 ****
--- 211,217 ----
  
  	u32	window_clamp;	/* Maximal window to advertise		*/
  	u32	rcv_ssthresh;	/* Current window clamp			*/
+ 	u16 ssthresh_scale;
  
  	/* Information of the most recently (s)acked skb */
  	struct tcp_rack {
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/include/net/netns/ipv4.h linux-4.19.68-dev/include/net/netns/ipv4.h
*** linux-4.19.68-original/include/net/netns/ipv4.h	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/include/net/netns/ipv4.h	2019-11-19 23:33:34.083268870 -0500
***************
*** 176,182 ****
  	unsigned long tfo_active_disable_stamp;
  
  	int sysctl_udp_wmem_min;
! 	int sysctl_udp_rmem_min;
  
  #ifdef CONFIG_NET_L3_MASTER_DEV
  	int sysctl_udp_l3mdev_accept;
--- 176,186 ----
  	unsigned long tfo_active_disable_stamp;
  
  	int sysctl_udp_wmem_min;
! 	int sysctl_udp_rmem_min;     
! 	
! 	/* Kernet Project 2 - Custom sysctl variable */
! 	int sysctl_tcp_ssthresh_scale;
! 	int sysctl_tcp_ssthresh_scale_flag;
  
  #ifdef CONFIG_NET_L3_MASTER_DEV
  	int sysctl_udp_l3mdev_accept;
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/include/net/sock.h linux-4.19.68-dev/include/net/sock.h
*** linux-4.19.68-original/include/net/sock.h	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/include/net/sock.h	2019-11-19 20:06:19.516730143 -0500
***************
*** 367,372 ****
--- 367,373 ----
  	socket_lock_t		sk_lock;
  	atomic_t		sk_drops;
  	int			sk_rcvlowat;
+ 	u16   ssthresh_scale;		/*our variable*/
  	struct sk_buff_head	sk_error_queue;
  	struct sk_buff_head	sk_receive_queue;
  	/*
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/include/net/tcp.h linux-4.19.68-dev/include/net/tcp.h
*** linux-4.19.68-original/include/net/tcp.h	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/include/net/tcp.h	2019-11-16 17:31:30.663742331 -0500
***************
*** 186,191 ****
--- 186,192 ----
  #define TCPOPT_TIMESTAMP	8	/* Better RTT estimations/PAWS */
  #define TCPOPT_MD5SIG		19	/* MD5 Signature (RFC2385) */
  #define TCPOPT_FASTOPEN		34	/* Fast open (RFC7413) */
+ #define TCPOPT_THRESH	253
  #define TCPOPT_EXP		254	/* Experimental */
  /* Magic number to be after the option value for sharing TCP
   * experimental options. See draft-ietf-tcpm-experimental-options-00.txt
***************
*** 205,210 ****
--- 206,213 ----
  #define TCPOLEN_FASTOPEN_BASE  2
  #define TCPOLEN_EXP_FASTOPEN_BASE  4
  #define TCPOLEN_EXP_SMC_BASE   6
+ #define TCPOLEN_THRESH		   2	/* threshold factor */
+ 
  
  /* But this is what stacks really send out. */
  #define TCPOLEN_TSTAMP_ALIGNED		12
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/include/uapi/linux/sysctl.h linux-4.19.68-dev/include/uapi/linux/sysctl.h
*** linux-4.19.68-original/include/uapi/linux/sysctl.h	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/include/uapi/linux/sysctl.h	2019-11-19 23:34:06.796062271 -0500
***************
*** 425,430 ****
--- 425,433 ----
  	NET_TCP_ALLOWED_CONG_CONTROL=123,
  	NET_TCP_MAX_SSTHRESH=124,
  	NET_TCP_FRTO_RESPONSE=125,
+ 	/* Kernet Project 2 - Internal representation ID for the new variable */
+     NET_TCP_SSTHRESH_SCALE=126,
+     NET_TCP_SSTHRESH_SCALE_FLAG=127,
  };
  
  enum {
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/kernel/sysctl_binary.c linux-4.19.68-dev/kernel/sysctl_binary.c
*** linux-4.19.68-original/kernel/sysctl_binary.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/kernel/sysctl_binary.c	2019-11-19 23:34:10.248117448 -0500
***************
*** 418,423 ****
--- 418,428 ----
  
  	{ CTL_INT,	2088 /* NET_IPQ_QMAX */,		"ip_queue_maxlen" },
  
+     /* Kernet Project 2 - representing the variable in sysctl binary */
+     { CTL_INT,  NET_TCP_SSTHRESH_SCALE, "tcp_ssthresh_scale" },
+     { CTL_INT,  NET_TCP_SSTHRESH_SCALE_FLAG, "tcp_ssthresh_scale_flag" },
+ 
+ 
  	/* NET_TCP_DEFAULT_WIN_SCALE unused */
  	/* NET_TCP_BIC_BETA unused */
  	/* NET_IPV4_TCP_MAX_KA_PROBES unused */
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/Makefile linux-4.19.68-dev/Makefile
*** linux-4.19.68-original/Makefile	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/Makefile	2019-11-20 23:14:11.067105303 -0500
***************
*** 2,8 ****
  VERSION = 4
  PATCHLEVEL = 19
  SUBLEVEL = 68
! EXTRAVERSION =
  NAME = "People's Front"
  
  # *DOCUMENTATION*
--- 2,8 ----
  VERSION = 4
  PATCHLEVEL = 19
  SUBLEVEL = 68
! EXTRAVERSION=-gengr
  NAME = "People's Front"
  
  # *DOCUMENTATION*
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/ipv4/sysctl_net_ipv4.c linux-4.19.68-dev/net/ipv4/sysctl_net_ipv4.c
*** linux-4.19.68-original/net/ipv4/sysctl_net_ipv4.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/ipv4/sysctl_net_ipv4.c	2019-11-19 23:34:01.203962917 -0500
***************
*** 32,37 ****
--- 32,38 ----
  static int one = 1;
  static int two = 2;
  static int four = 4;
+ static int hundred = 100;
  static int thousand = 1000;
  static int gso_max_segs = GSO_MAX_SEGS;
  static int tcp_retr1_max = 255;
***************
*** 1238,1243 ****
--- 1239,1268 ----
  		.proc_handler	= proc_dointvec_minmax,
  		.extra1		= &one
  	},
+ 	/* Kernet Project 2 - Details for the custom sysctl variable */
+     {
+         .procname   = "tcp_ssthresh_scale",
+         .data       = &init_net.ipv4.sysctl_tcp_ssthresh_scale,
+         .maxlen     = sizeof(int),
+         /* Owner: Read & Write, Group, Others: Read */
+         .mode       = 0644,
+         /* this scaling factor should be at least 1 */
+         .proc_handler   = proc_dointvec_minmax,
+         .extra1     = &one,
+         .extra2		= &hundred
+     },
+     	/* Kernet Project 2 - Details for the custom sysctl variable */
+     {
+         .procname   = "tcp_ssthresh_scale_flag",
+         .data       = &init_net.ipv4.sysctl_tcp_ssthresh_scale_flag,
+         .maxlen     = sizeof(int),
+          // Owner: Read & Write, Group, Others: Read 
+         .mode       = 0644,
+         /* this scaling factor should be at least 1 */
+         .proc_handler   = proc_dointvec_minmax,
+         .extra1     = &zero,
+         .extra2		= &one
+     },
  	{ }
  };
  
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/ipv4/tcp_cong.c linux-4.19.68-dev/net/ipv4/tcp_cong.c
*** linux-4.19.68-original/net/ipv4/tcp_cong.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/ipv4/tcp_cong.c	2019-11-20 21:56:16.975149833 -0500
***************
*** 452,459 ****
  u32 tcp_reno_ssthresh(struct sock *sk)
  {
  	const struct tcp_sock *tp = tcp_sk(sk);
  
! 	return max(tp->snd_cwnd >> 1U, 2U);
  }
  EXPORT_SYMBOL_GPL(tcp_reno_ssthresh);
  
--- 452,465 ----
  u32 tcp_reno_ssthresh(struct sock *sk)
  {
  	const struct tcp_sock *tp = tcp_sk(sk);
+ 	const struct inet_sock *inet = inet_sk(sk);
+ 	if (sk->ssthresh_scale == 0){
+ 		sk->ssthresh_scale = 20;
+ 	}
+ 	printk("KERNET src: %d dst: %d old: %d new: %d\n", ntohs(inet->inet_sport), ntohs(inet->inet_dport),
+ 		tp->snd_cwnd, max( 10*tp->snd_cwnd / sk->ssthresh_scale , 2U));
  
! 	return max( 10*tp->snd_cwnd / sk->ssthresh_scale , 2U);
  }
  EXPORT_SYMBOL_GPL(tcp_reno_ssthresh);
  
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/ipv4/tcp_input.c linux-4.19.68-dev/net/ipv4/tcp_input.c
*** linux-4.19.68-original/net/ipv4/tcp_input.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/ipv4/tcp_input.c	2019-11-20 21:57:03.619408481 -0500
***************
*** 3814,3819 ****
--- 3814,3823 ----
  		case TCPOPT_NOP:	/* Ref: RFC 793 section 3.1 */
  			length--;
  			continue;
+ 		case TCPOPT_THRESH:
+ 			opsize = *ptr++;
+ 			opt_rx->ssthresh_scale = get_unaligned_be16(ptr) ; /* skip the size and first 8 bits of value*/
+ 			break;
  		default:
  			opsize = *ptr++;
  			if (opsize < 2) /* "silly options" */
***************
*** 3821,3826 ****
--- 3825,3831 ----
  			if (opsize > length)
  				return;	/* don't parse partial options */
  			switch (opcode) {
+ 
  			case TCPOPT_MSS:
  				if (opsize == TCPOLEN_MSS && th->syn && !estab) {
  					u16 in_mss = get_unaligned_be16(ptr);
***************
*** 6432,6437 ****
--- 6437,6443 ----
  	struct dst_entry *dst;
  	struct flowi fl;
  
+ 
  	/* TW buckets are converted to open requests without
  	 * limitations, they conserve resources and peer is
  	 * evidently real one.
***************
*** 6460,6465 ****
--- 6466,6473 ----
  	tmp_opt.user_mss  = tp->rx_opt.user_mss;
  	tcp_parse_options(sock_net(sk), skb, &tmp_opt, 0,
  			  want_cookie ? NULL : &foc);
+ 	
+ 	sk->ssthresh_scale = tmp_opt.ssthresh_scale; /*our variable*/
  
  	if (want_cookie && !tmp_opt.saw_tstamp)
  		tcp_clear_options(&tmp_opt);
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/ipv4/tcp_ipv4.c linux-4.19.68-dev/net/ipv4/tcp_ipv4.c
*** linux-4.19.68-original/net/ipv4/tcp_ipv4.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/ipv4/tcp_ipv4.c	2019-11-19 23:33:37.563380780 -0500
***************
*** 2594,2599 ****
--- 2594,2601 ----
  	net->ipv4.sysctl_tcp_fastopen_blackhole_timeout = 60 * 60;
  	atomic_set(&net->ipv4.tfo_active_disable_times, 0);
  
+ 	net->ipv4.sysctl_tcp_ssthresh_scale = 20;
+ 	net->ipv4.sysctl_tcp_ssthresh_scale_flag = 1;
  	/* Reno is always built in */
  	if (!net_eq(net, &init_net) &&
  	    try_module_get(init_net.ipv4.tcp_congestion_control->owner))
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/ipv4/tcp_output.c linux-4.19.68-dev/net/ipv4/tcp_output.c
*** linux-4.19.68-original/net/ipv4/tcp_output.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/ipv4/tcp_output.c	2019-11-20 21:57:49.923665230 -0500
***************
*** 434,439 ****
--- 434,441 ----
  struct tcp_out_options {
  	u16 options;		/* bit field of OPTION_* */
  	u16 mss;		/* 0 to disable */
+ 	u16 threshold;   /*project2 variable*/
+ 	u16 ssthresh_scale;   /*project2 variable*/
  	u8 ws;			/* window scale, 0 to disable */
  	u8 num_sack_blocks;	/* number of SACK blocks to include */
  	u8 hash_size;		/* bytes in hash_location */
***************
*** 549,554 ****
--- 551,562 ----
  		ptr += (len + 3) >> 2;
  	}
  
+     if (opts->threshold) {
+ 		*ptr++ = htonl((TCPOPT_THRESH << 24) |
+ 			       (TCPOLEN_THRESH << 16) |
+ 			       opts->ssthresh_scale);
+ 	}
+ 
  	smc_options_write(ptr, &options);
  }
  
***************
*** 619,624 ****
--- 627,645 ----
  	opts->mss = tcp_advertise_mss(sk);
  	remaining -= TCPOLEN_MSS_ALIGNED;
  
+ 	// printk("The algorithm2 %d\n", sk->);
+ 	if (sock_net(sk)->ipv4.sysctl_tcp_ssthresh_scale_flag)
+ 	{
+ 		opts->threshold = 1;				// our variable
+ 		remaining -= 4;
+ 	} else {
+ 		opts->threshold = 0;
+ 		printk("Disable\n");
+ 	}
+ 	// opts->threshold = 1;				our variable
+ 	// remaining -= 4;
+ 
+ 
  	if (likely(sock_net(sk)->ipv4.sysctl_tcp_timestamps && !*md5)) {
  		opts->options |= OPTION_TS;
  		opts->tsval = tcp_skb_timestamp(skb) + tp->tsoffset;
***************
*** 714,719 ****
--- 735,752 ----
  		}
  	}
  
+ 	if (sock_net(sk)->ipv4.sysctl_tcp_ssthresh_scale_flag)
+ 	{
+ 		opts->threshold = 1;				// our variable
+ 		remaining -= 4;
+ 	} else {
+ 		opts->threshold = 0;
+ 		printk("Disable\n");
+ 	}
+ 	// opts->threshold = 1;				/*our variable*/
+ 	// remaining -= 4;
+ 
+ 
  	smc_set_option_cond(tcp_sk(sk), ireq, opts, &remaining);
  
  	return MAX_TCP_OPTION_SPACE - remaining;
***************
*** 761,766 ****
--- 794,801 ----
  			opts->num_sack_blocks * TCPOLEN_SACK_PERBLOCK;
  	}
  
+ 	opts->threshold = 1;
+ 	size += 4;
  	return size;
  }
  
***************
*** 1107,1113 ****
  			th->urg = 1;
  		}
  	}
! 
  	tcp_options_write((__be32 *)(th + 1), tp, &opts);
  	skb_shinfo(skb)->gso_type = sk->sk_gso_type;
  	if (likely(!(tcb->tcp_flags & TCPHDR_SYN))) {
--- 1142,1148 ----
  			th->urg = 1;
  		}
  	}
! 	opts.ssthresh_scale = sock_net(sk)->ipv4.sysctl_tcp_ssthresh_scale;
  	tcp_options_write((__be32 *)(th + 1), tp, &opts);
  	skb_shinfo(skb)->gso_type = sk->sk_gso_type;
  	if (likely(!(tcb->tcp_flags & TCPHDR_SYN))) {
diff -rcNP -x 'signing_key.*' -x x509.genkey -x fixdep -x objtool -x inat-tables.c linux-4.19.68-original/net/socket.c linux-4.19.68-dev/net/socket.c
*** linux-4.19.68-original/net/socket.c	2019-08-25 04:48:06.000000000 -0400
--- linux-4.19.68-dev/net/socket.c	2019-11-20 22:10:36.507915753 -0500
***************
*** 108,113 ****
--- 108,114 ----
  #include <net/busy_poll.h>
  #include <linux/errqueue.h>
  
+ 
  #ifdef CONFIG_NET_RX_BUSY_POLL
  unsigned int sysctl_net_busy_read __read_mostly;
  unsigned int sysctl_net_busy_poll __read_mostly;
